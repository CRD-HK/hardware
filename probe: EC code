//Arduino 1.8.9 IDE
//The CRD-HK Science & Technology branch, for the SBC project 2019-2020 (CRD-HK/HKU)


#include <Wire.h>                
#define address 100              



char computerdata[20];           
byte received_from_computer = 0; 
byte serial_event = 0;           
byte code = 0;                   
char ec_data[32];                
byte in_char = 0;                
byte i = 0;                      
int time_ = 570;                 

char *ec;                        
char *tds;                       
char *sal;                       
char *sg;                        

float ec_float;                  
float tds_float;                 
float sal_float;                 
float sg_float;                  


void setup()                     
{
  Serial.begin(9600);            
  Wire.begin();                  
}


void serialEvent() {                                                              
  received_from_computer = Serial.readBytesUntil(13, computerdata, 20);           
  computerdata[received_from_computer] = 0;                                       
  serial_event = true;                                                            
}



void loop() {                                                                     
  if (serial_event == true) {                                                     
    for (i = 0; i <= received_from_computer; i++) {                               
      computerdata[i] = tolower(computerdata[i]);                                 
    }
    i=0;                                                                           
    if (computerdata[0] == 'c' || computerdata[0] == 'r')time_ = 570;             
    else time_ = 250;                                                             


    Wire.beginTransmission(address);                                            
    Wire.write(computerdata);                                                   
    Wire.endTransmission();                                                     


    if (strcmp(computerdata, "sleep") != 0) {                                   
                                                                                

      delay(time_);                                                             

      Wire.requestFrom(address, 32, 1);                                         
      code = Wire.read();                                                       

      switch (code) {                           
        case 1:                                 
          Serial.println("Success");            
          break;                                

        case 2:                                 
          Serial.println("Failed");             
          break;                                

        case 254:                               
          Serial.println("Pending");            
          break;                                

        case 255:                               
          Serial.println("No Data");            
          break;                                
      }

      while (Wire.available()) {                 
        in_char = Wire.read();                   
        ec_data[i] = in_char;                    
        i += 1;                                  
        if (in_char == 0) {                      
          i = 0;                                 
          break;                                 
        }
      }

      Serial.println(ec_data);                  
      Serial.println();                          
    }
    serial_event = false;                      

    
  }

}
void string_pars() {                  
                                      

  ec = strtok(ec_data, ",");          
  tds = strtok(NULL, ",");            
  sal = strtok(NULL, ",");            
  sg = strtok(NULL, ",");             

  Serial.print("EC:");                
  Serial.println(ec);                 

  Serial.print("TDS:");               
  Serial.println(tds);                

  Serial.print("SAL:");               
  Serial.println(sal);                

  Serial.print("SG:");               
  Serial.println(sg);                
  Serial.println();                   
    
    
}
